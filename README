Kalles Fraktaler 2 fork for cross-compilation to win64 from linux mingw64, using GMP
upstream version: http://www.chillheimer.de/kallesfraktaler/
this version: https://mathr.co.uk/kf/kf.html

benchmarks                 upstream exes   cross-mingw 2.9.3 fork  cross-mingw 2.11.1 fork additional notes
                           2.9.4   2.11.1  custom  gmp     mpfr    custom  gmp     mpfr    zoom    delta type
evolution-of-trees.kfr     3:58.7  3:43.3  6:10.3  4:16.7  4:41.6  -       4:06.1  4:19.4  e227    double
Ssssssssss.kfr             7.537   8.363   9.041   6.605   6.731   -       7.580   7.470   e533    scaled double
e1000.kfr w/  dll          7.279   7.370   8.674   6.343   6.510   -       5.119   5.242   e1000   long double
e1000.kfr w/o dll          7.752   7.905   fail    6.737   6.782   -       -       -       e1000   floatexp
glitch33.kfr w/  dll       9.483   9.551   11.170  7.448   7.691   -       6.184   6.305   e1277   long double
glitch33.kfr w/o dll       10.112  10.185  fail    7.982   8.033   -       -       -       e1277   floatexp
htile-pistil.kfr w/  dll   3h04    3h01    -       1h18    -       -       1h18    1h28    e2293   long double
N/R zoom (glitch33.kfr)    -       4m18s   -       -       -       -       0m17s   -       N/R zoom center pixel

known bugs
- newton-raphson zooming to minibrot doesn't increase maxiters enough sometimes
- large sys time on linux, excessive threading for reference computations?
  htile-pistil.kfr mpfr: real 92m37.331s  user 138m11.660s  sys 58m59.812s

configuration (COMPILE_FLAGS in Makefile)
- add -DKF_FLOAT_BACKEND_CUSTOM to use original arbitrary precision code instead of GMP
- add -DKF_FLOAT_BACKEND_MPFR to use MPFR instead of GMP
- add -DKF_LONG_DOUBLE_DLL to compile long double support into separate DLL
  instead of building it into the executable itself; also remove LDBL_SOURCES
  from SOURCES_CPP
